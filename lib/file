#!/bin/bash
# =====================================
#           ファイル操作関数定義
# =====================================
base="$(cd $(dirname ${BASH_SOURCE:-$0}); pwd)"

# ----------------
#     関数定義
# ----------------
file.executable() {
  # 指定されたファイルが実行可能かを返します
  # param1 ファイルパス
  # returnCd 0:実行可能 1:実行不可
  [[ "$#" -ne 0 ]] && [[ ! -z "${1+x}" ]] && [[ -x "${1}" ]]
}

file.writable() {
  # 指定されたファイルが書込可能かを返します
  # param1 ファイルパス
  # returnCd 0:書込可能 1:書込不可
  [[ "$#" -ne 0 ]] && [[ ! -z "${1+x}" ]] && [[ -w "${1}" ]]
}

file.readable() {
  # 指定されたファイルが読込可能かを返します
  # param1 ファイルパス
  # returnCd 0:読込可能 1:読込不可
  [[ "$#" -ne 0 ]] && [[ ! -z "${1+x}" ]] && [[ -r "${1}" ]]
}

file.isFile() {
  # 指定されたパスがファイルかを返します
  # param1 ファイルパス
  # returnCd 0:ファイル 1:ファイルではない
  [[ "$#" -ne 0 ]] && [[ ! -z "${1+x}" ]] && [[ -f "${1}" ]]
}

file.isDirectory() {
  # 指定されたパスがディレクトリかを返します
  # param1 ファイルパス
  # returnCd 0:ディレクトリ 1:ディレクトリではない
  [[ "$#" -ne 0 ]] && [[ ! -z "${1+x}" ]] && [[ -d "${1}" ]]
}

file.isLink() {
  # 指定されたパスがシンボリックリンクかを返します
  # param1 ファイルパス
  # returnCd 0:シンボリックリンク 1:シンボリックリンクではない
  [[ "$#" -ne 0 ]] && [[ ! -z "${1+x}" ]] && [[ -L "${1}" ]]
}

file.exists() {
  # 指定されたパスが存在するかを返します
  # param1 ファイルパス
  # returnCd 0:存在する 1:存在しない
  [[ "$#" -ne 0 ]] && [[ ! -z "${1+x}" ]] && [[ -e "${1}" ]]
}

file.isNotEmpty() {
  # 指定されたパスのファイルが0バイト以上かを返します
  # param1 ファイルパス
  # returnCd 0:空ファイルではない 1:存在しないもしくは空ファイル
  [[ "$#" -ne 0 ]] && [[ ! -z "${1+x}" ]] && [[ -s "${1}" ]]
}

file.absolutePath() {
  # 指定されたファイルの絶対パスを返します
  # param1+ ファイルパス
  # return 絶対パス
  local p
  local arr
  arr=()
  for p in "$@";do
    p=$(readlink -e "${p}")
    p="$(cd $(dirname ${p});pwd)/$(basename ${p})"
    arr+=( "${p}" )
  done
  echo "${arr[@]}"
}

file.size() {
  # 指定されたファイルのバイトサイズを返します
  # param1 ファイルパス
  # return ファイルサイズ
  # returnCd 0:正常 1:ファイルが存在しない
  local p
  for p in "$@";do
    if [[ ! -z "${1+p}" ]];then
      if [[ -d "$p" ]];then
        echo -e "$(du -b --max-depth=0 $(cd ${p};pwd))/"
      elif [[ -e "$p" ]];then
        echo -e "$(stat -c %s ${p})\t$(cd $(dirname ${p});pwd)/$(basename ${p})"
      fi
    fi
  done
}

file.stream() {
  # 指定されたファイルもしくは入力ストリームをストリームとして返します
  # input-stream 入力ストリーム
  # param1+ ファイルパス
  # return ストリーム
  if [ -t 0 ]; then
    [[ "$#" -ne 0 ]] && cat "$@"
  else
    cat -
  fi
}